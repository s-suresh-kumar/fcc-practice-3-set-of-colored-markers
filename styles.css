
/* Step 8
Now that your external CSS file is set up, you can start styling the page.

As a reminder, here's how to target a paragraph element and align it to the right:

p {
  text-align: right;
}
Create a new CSS rule that targets the h1 element, and set its text-align property to center. */

h1 {
  text-align: center;
}

/* Step 21
There are two main color models: the additive RGB (red, green, blue) model used in electronic devices, and the subtractive CMYK (cyan, magenta, yellow, black) model used in print.

In this project, you'll work with the RGB model. This means that colors begin as black, and change as different levels of red, green, and blue are introduced. An easy way to see this is with the CSS rgb function.

Create a new CSS rule that targets the class container and set its background-color to black with rgb(0, 0, 0). */

.container {
  background-color: rgb(0,0,0);
}

/* Step 11
It's time to add some color to the marker. Remember that one way to add color to an element is to use a color keyword like black, cyan, or yellow.

As a reminder, here's how to target the class freecodecamp:

.freecodecamp {
  
}
Create a new CSS rule that targets the class marker, and set its background-color property to red.

Note: You will not see any changes after adding the CSS. */

.marker {

  /* Step 17
  Next, remove the background-color property and its value from the .marker CSS rule. */

  /* Step 12
  The background color was applied, but since the marker div element has no content in it, it doesn't have any height by default.
  
  In your .marker CSS rule, set the height property to 25px and the width property to 200px */

height: 25px;
width:200px;

/* Step 13
Your marker would look better if it was centered on the page. An easy way to do that is with the margin shorthand property.

In the last project, you set the margin area of elements separately with properties like margin-top and margin-left. The margin shorthand property makes it easy to set multiple margin areas at the same time.

To center your marker on the page, set its margin property to auto. This sets margin-top, margin-right, margin-bottom, and margin-left all to auto. */

/* Step 15
While you have three separate marker div elements, they look like one big rectangle. You should add some space between them to make it easier to see each element.

When the shorthand margin property has two values, it sets margin-top and margin-bottom to the first value, and margin-left and margin-right to the second value.

In your .marker CSS rule, set the margin property to 10px auto. */

margin: 10px auto;

}

/* Step 18
Then, create a new CSS rule that targets the class one and set its background-color property to red. */

.one {
  background-color: red;
}

/* Step 20
Create a CSS rule that targets the class two and set its background-color property to green.

Also, create a separate CSS rule that targets the class three and set its background-color to blue. */

.two {
  background-color: green;
}

.three {
  background-color: blue;
}
